

plugins {
    id("base")
    id("com.github.node-gradle.node") version "3.5.0"
}

node {
    // Version of node to use.
    version = '16.18.0'

    // Version of npm to use.
    npmVersion = '6.13.7'

    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = true
}

npm_run_build {
    // make sure the build task is executed only when appropriate files change
    inputs.files fileTree('src')
    // 'node_modules' appeared not reliable for dependency change detection (the task was rerun without changes)
    // though 'package.json' and 'package-lock.json' should be enough anyway
    inputs.file 'package.json'
    inputs.file 'package-lock.json'
}

task packageNpmApp(type: Zip) {
    dependsOn npm_install
    dependsOn npm_run_build
    baseName 'frontend'
    extension 'jar'
    destinationDir file("${projectDir}/build")
    from('dist') {
        into 'frontend'
    }
}

// declare a dedicated scope for publishing the packaged JAR
configurations {
    npmResources
}

configurations.default.extendsFrom(configurations.npmResources)

// expose the artifact created by the packaging task
artifacts {
    npmResources(packageNpmApp.archivePath) {
        builtBy packageNpmApp
        type 'jar'
    }
}

assemble.dependsOn packageNpmApp

clean {
    delete packageNpmApp.archivePath
}
