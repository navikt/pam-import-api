name: build-deploy-dev
on:
  push:
    branches:
      - workflow_test
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '11.x'
      - name: build and test
        run: ./gradlew test build
      - name: versions and tag
        run: |
          VERSION_TAG=$(./gradlew properties -q | grep "version:" | awk '{print $2}')
          DOCKER_TAG=$VERSION_TAG-$(echo $GITHUB_SHA | cut -c1-7)
          echo "::set-env name=DOCKER_TAG::$DOCKER_TAG"
          echo "::set-env name=LATEST_TAG::$(curl -s "https://api.github.com/repos/$GITHUB_REPOSITORY/releases/latest" | jq '.tag_name' | sed -e 's/"//g')"
      - name: build docker image
        run: |
          DOCKER_IMAGE=docker.pkg.github.com/$GITHUB_REPOSITORY/pam-import-api
          echo "::set-env name=IMAGE::$DOCKER_IMAGE:$DOCKER_TAG"
          docker build . --pull -t $IMAGE
#      - name: push docker image
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: |
#          echo "$GITHUB_TOKEN" | docker login --username "$GITHUB_REPOSITORY" --password-stdin docker.pkg.github.com
#          docker push $IMAGE
  deploy:
    name: deploy to test
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: deploy to nais
        run: echo $IMAGE
#      - uses: nais/deploy/actions/deploy@v1
#        env:
#          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
#          CLUSTER: dev-sbs
#          RESOURCE: naiserator.yml
#          VARS: naiserator-dev.json
