plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.70"
    id "org.jetbrains.kotlin.kapt" version "1.3.70"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.70"
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "application"
}

version "0.2"
group "no.nav.arbeidsplassen.importapi"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
    maven { url "https://github-package-registry-mirror.gc.nav.no/cached/maven-release"}
}

configurations {
    developmentOnly
}

dependencies {
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"

    kapt platform("io.micronaut:micronaut-bom:$micronautVersion")
    kapt "io.micronaut:micronaut-inject-java"
    kapt "io.micronaut:micronaut-validation"
    kaptTest platform("io.micronaut:micronaut-bom:$micronautVersion")
    kaptTest "io.micronaut:micronaut-inject-java"
    kapt("io.micronaut.configuration:micronaut-openapi:$micronauOpenApiVersion")
    kapt("io.micronaut.data:micronaut-data-processor:$micronautDataVersion")

    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    runtimeOnly "net.logstash.logback:logstash-logback-encoder:6.2"
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "io.micronaut.test:micronaut-test-junit5:1.1.2"
    testImplementation "org.mockito:mockito-junit-jupiter:2.22.0"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:5.1.0"
    testImplementation "com.h2database:h2:1.4.199"
    developmentOnly "com.h2database:h2:1.4.199"
    testImplementation 'io.micronaut.configuration:micronaut-flyway'
    testImplementation "io.micronaut.configuration:micronaut-jdbc-hikari"
    testImplementation "io.micronaut.data:micronaut-data-jdbc:$micronautDataVersion"

    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.10.3"
    implementation "io.micronaut.configuration:micronaut-micrometer-core:$micronautMicrometerVersion"
    implementation "io.micronaut.configuration:micronaut-micrometer-registry-prometheus:$micronautMicrometerVersion"
    implementation "io.micronaut:micronaut-management:$micronautVersion"
    implementation "io.micronaut.kafka:micronaut-kafka:${micronautKafkaVersion}"

    implementation "io.micronaut.data:micronaut-data-jdbc:$micronautDataVersion"
    implementation "io.micronaut.configuration:micronaut-jdbc-hikari"
    compileOnly "jakarta.persistence:jakarta.persistence-api:2.2.2"
    implementation "io.micronaut.configuration:micronaut-flyway"

    implementation "net.javacrumbs.shedlock:shedlock-micronaut:$shedlockVersion"
    implementation "net.javacrumbs.shedlock:shedlock-provider-jdbc:$shedlockVersion"

    implementation "no.nav.arbeid.pam:pam-ansettelseskodeverk:$pamAnsettelsesKodeverkVersion"
    implementation "no.nav.arbeid.pam:pam-styrk-yrkeskategori-mapper:$pamStyrkKategoriMapperVersion"
    runtimeOnly "org.postgresql:postgresql:$postgresqlVersion"
    implementation "io.micronaut:micronaut-security-jwt"
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation "com.googlecode.owasp-java-html-sanitizer:owasp-java-html-sanitizer:20190610.1"
    implementation "org.apache.commons:commons-text:1.8"
}

test.classpath += configurations.developmentOnly

application {
    mainClassName = "no.nav.arbeidsplassen.importapi.Application"
}

test {
    exclude "**/*IT.class"
    useJUnitPlatform()
}

allOpen {
	annotation("io.micronaut.aop.Around")
    annotation("no.nav.arbeidsplassen.importapi.Open")
}

compileKotlin {
	kotlinOptions {
	    jvmTarget = "11"
	    //Will retain parameter names for Java reflection
	    javaParameters = true
	}
}

compileTestKotlin {
	kotlinOptions {
	    jvmTarget = "11"
	    javaParameters = true
	}
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs("-noverify", "-XX:TieredStopAtLevel=1", "-Dcom.sun.management.jmxremote", "-Dlogback.configurationFile=src/test/resources/logback-test.xml")
