apiVersion: "nais.io/v1alpha1"
kind: "Application"
metadata:
  name: pam-import-api
  namespace: teampam
  labels:
    team: teampam
spec:
  image: {{ image }}
  port: 9028
  liveness:
    path: /stillingsimport/internal/isAlive
    initialDelay: 40
  readiness:
    path: /stillingsimport/internal/isReady
    initialDelay: 40
  replicas:
    min: 1
    max: 1
    cpuThresholdPercentage: 50
  resources:
    limits:
      cpu: 1000m
      memory: 2048Mi
    requests:
      cpu: 200m
      memory: 512Mi
  vault:
    enabled: false
  webproxy: false
  leaderElection: true
  prometheus:
    enabled: true
    path: /stillingsimport/internal/prometheus
  observability:
    logging:
      destinations:
        - id: loki
        - id: elastic
  ingresses:
  {{#each ingress as |url|}}
     - {{url}}
  {{/each}}
  filesFrom:
    - secret: pam-import-api-env-secret
      mountPath: /var/run/secrets/nais.io/vault
  kafka:
    pool: {{ kafka_pool }}
  env:
    - name: DB_DRIVER
      value: "org.postgresql.Driver"
    - name: AD_PREVIEW_URL
      value: {{ ad_preview_url }}
    - name: ADMINSTATUS_KAFKA_TOPIC
      value: "{{ adminstatus_kafka_topic }}"
    - name: PULSEVENT_KAFKA_TOPIC
      value: "{{ pulsevent_kafka_topic }}"
    - name: PULSEVENT_KAFKA_ENABLED
      value: "{{ pulsevent_kafka_enabled }}"
    - name: ANNONSEMOTTAK_TOPIC
      value: "{{ annonsemottak_topic }}"
    - name: AD_OUTBOX_KAFKA_ENABLED
      value: "{{ ad_outbox_kafka_enabled }}"
    - name: AD_OUTBOX_SCHEDULER_ENABLED
      value: "{{ ad_outbox_scheduler_enabled }}"
  gcp:
    sqlInstances:
      - name: import-api-stilling
        type: POSTGRES_14
        tier: "{{ cloudsql_tier }}"
        diskType: SSD
        highAvailability: true
        diskSize: 20
        diskAutoresize: true
        databases:
          - name: importapi
            envVarPrefix: DB
        cascadingDelete: false
  accessPolicy:
    inbound:
      rules:
        - application: pam-ad
    outbound:
      rules:
        - application: pam-ontologi
